need of oops:
    used to achieve modular programming.

def
    -- Class is factory that producing product(objects).
    -- Object is any real world entity.

    object have state and behaviour.

    
                -------- State ---------- Variables.
    object -----
                -------- Behaviour ------ Function/ Methods

Four Pillars of Object Oriented programming :
    1.Encapsulation
    2.Polymorphism
    3.Inheritance
    4.Abstraction

1. Encapsulation : 
    Wrapping data under single unit.
    When you wrape the data, data members, member Functions in a single module
    which is Class. It is called as Encapsulation.

    It is like a protective shield that prevents the data from being accessed by the code outside of the shield.

    Encapsulation 
        |
        |---- Data members --- Private
        |---- Member Functions --- Public


    Instace Variables are declared Private to prevent misuse.
    Providing Methods that can be used to read/write the state rather than accessing the state directly.

2. Inheritance :
    Deriving a class from a Base. Aqquiring its nature and behaviour.
    There are various types of Inheritance:
        1.Single : 
            Only one Base class and Derived class.
            Super ----- > Sub class
        
        2.Hierarchical Inheritance:
            One base class and multiple Derived classes.
                     ------- Sub class 1   
                     ------  Sub class 2
            Super --- ------ Sub class 3
                    -------- Sub class 4
                    -------- Sub class 5
        
        3. Multilevel Inheritance :
            Super class extends by Intermediate class and later Derived class.
            Super ---- Intermediate ----- Derived.
        
        4.Multiple Inheritance:
            Multiple Super classes and only one Derived class.
            Super class 1 -------
            Super class 2 ------- ---------> Derived class.
            Super class 3 -------

            In some lanhuages not supported defaultly to use it Interface concept is introduced.
        
        5. Hybrid Inheritance:
            One super class in between multiple Intermediate classed and one Derived class.

                            ------ Intermediate 1 -----
            Super class ----                            ----- Derived class.
                            ------ Intermediate 2 ----

            Not supported by java. Create unneccsary ambiguty.  

3. Abstraction:
    process of data hiding.
    Displaying essential information and hiding the details.
    ex- C++ clrscr().

    Hiding the implemntation details only show the essential information to the user this process is called as Abstraction or Data hiding.

